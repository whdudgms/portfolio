<?xml version="1.0" encoding="UTF-8"?>

<!-- Root 영역 : service, dao -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- 공용 설정 파일 -->
	<util:properties id="config"
		location="classpath:*config.ini" />

	<!-- bean IOC - 비밀번호재설정을 위한 메일 보낼 유틸 bean설정 -->

	<bean id="AES256Util" class="com.lhs.util.AES256Util">
		<constructor-arg value="whdudgmswhdudgms"></constructor-arg>
	</bean>

	<!-- EmailUtil emailUtil = new EmailUtil(mailSender);과 유사 스프링이 xml 읽어서 자바로 
		바꿈(단, 싱글톤으로 만듬) -->
	<bean id="emailUtil" class="com.lhs.util.EmailUtil">
		<constructor-arg ref="mailSender" />
	</bean>


	<!-- Annotation 기반의 Component Scan 필터(service package 만 검색) -->
	<context:component-scan base-package="com.lhs">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="regex"
			expression="\.*\.dao\.*" />
	</context:component-scan>


	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location"
			value="/WEB-INF/config/config.properties" />
		<property name="fileEncoding" value="UTF-8" />
	</bean>



	<!-- DB와 연결/쿼리의 수행/결과의 가공 등을 담당하는 sqlSessionFactory -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- DB에 접속하기 위해서 설정 -->
		<property name="dataSource" ref="dataSource"></property>

		<!-- myBatis 기본 설정 -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>

		<!-- SQL 적힌 mapper(xml) 위치 -->
		<property name="mapperLocations"
			value="classpath:sql/SQL.*.xml"></property>

		<!-- 트랙잭션 관리를 위한 것 -->
		<property name="transactionFactory">
			<bean
				class="org.mybatis.spring.transaction.SpringManagedTransactionFactory"></bean>
		</property>
	</bean>

	<!-- DAO interface를 mapper(xml)과 연결시키기 위해 탐색(scan) -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lhs.dao"></property>
	</bean>

	<!-- 트랜잭션 관리를 위한 bean -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- 첨부파일 위한 빈 수동 설정.. fileUtil -->
	<bean id="fileUtil" class="com.lhs.util.FileUtil" />

	<!-- transaction annotation -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- 홈에서 이메일 전송하기 위한 bean설정 -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com" />
		<property name="port" value="587" />
		<property name="username" value="${email.id}" />
		<property name="password" value="${email.pw}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

</beans>
